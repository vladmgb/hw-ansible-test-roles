---
- name: Install dependencies
  package:
    name:
      - curl
      - tar
      - gzip
    state: present

- name: Ensure Vector binary is present
  stat:
    path: /usr/local/bin/vector
  register: vector_bin

- name: Create temp directory for Vector archive
  tempfile:
    state: directory
    suffix: vector
  register: vector_tmp_dir
  when: not vector_bin.stat.exists

- name: Download Vector archive if binary is missing
  get_url:
    url: "https://github.com/vectordotdev/vector/releases/download/v{{ vector_version }}/vector-{{ vector_version }}-x86_64-unknown-linux-gnu.tar.gz"
    dest: "/tmp/vector-{{ vector_version }}.tar.gz"
    mode: "0644"
  when: not vector_bin.stat.exists

- name: Create extraction directory for Vector
  file:
    path: "{{ vector_tmp_dir.path }}/vector-{{ vector_version }}"
    state: directory
    mode: "0755"
  when: not vector_bin.stat.exists

- name: Extract Vector archive if binary is missing
  unarchive:
    src: "/tmp/vector-{{ vector_version }}.tar.gz"
    dest: "{{ vector_tmp_dir.path }}/vector-{{ vector_version }}"
    remote_src: true
    extra_opts: [--strip-components=1]
  when: not vector_bin.stat.exists

- name: Find Vector binary
  find:
    paths: "{{ vector_tmp_dir.path }}/vector-{{ vector_version }}"
    patterns: "vector"
    recurse: true
    file_type: file
  register: vector_binary
  when: not vector_bin.stat.exists

- name: Fail if Vector binary not found
  fail:
    msg: "Vector binary not found in extracted archive"
  when: not vector_bin.stat.exists and vector_binary.matched == 0

- name: Install Vector binary
  copy:
    src: "{{ vector_binary.files[0].path }}"
    dest: "/usr/local/bin/vector"
    mode: "0755"
    remote_src: true
  when: not vector_bin.stat.exists

- name: Create Vector config directory
  file:
    path: "{{ vector_config_dir }}"
    state: directory
    mode: "0755"

- name: Apply Vector configuration
  template:
    src: vector.yml.j2
    dest: "{{ vector_config_dir }}/vector.yml"
    mode: "0644"
    validate: "/usr/local/bin/vector validate --no-environment --config-yaml %s"

- name: Create Vector run script
  template:
    src: vector_run.sh.j2
    dest: "/usr/local/bin/run-vector"
    mode: "0755"

- name: Start Vector process
  command: /usr/local/bin/run-vector
  async: 10
  poll: 0
  changed_when: false

- name: Cleanup temp directory
  file:
    path: "{{ vector_tmp_dir.path }}"
    state: absent
  when: not vector_bin.stat.exists

- name: Cleanup downloaded archive
  file:
    path: "/tmp/vector-{{ vector_version }}.tar.gz"
    state: absent
  when: not vector_bin.stat.exists
